// <autogenerated />
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

namespace NotificationService.UnitTests.Data.Repositories.WebNotificationItemEntityRepository_Tests
{
    using System;
    using System.Diagnostics.CodeAnalysis;
    using NotificationService.Data.Repositories;
    using NUnit.Framework;

    /// <summary>
    /// WebNotificationItemEntityBaseTests.
    /// </summary>
    [ExcludeFromCodeCoverage]
    public class Ctor_Tests : WebNotificationItemEntityBaseTests
    {
        /// <summary>
        /// Ctors the null logger.
        /// </summary>
        [Test]
        public void Ctor_NullLogger()
        {
            this.SetupTestBase();
            var ex = Assert.Throws<ArgumentNullException>(() => new WebNotificationItemEntityRepository(this.CosmosDBSetting, this.CosmosDBQueryClient.Object, null, this.CosmosLinqQueryMock.Object));
            Assert.IsTrue(ex.ParamName.Equals("logger", StringComparison.OrdinalIgnoreCase));
        }

        /// <summary>
        /// Ctors the null cosmos database settings.
        /// </summary>
        [Test]
        public void Ctor_NullCosmosDbSettings()
        {
            this.SetupTestBase();
            var ex = Assert.Throws<ArgumentNullException>(() => new WebNotificationItemEntityRepository(null, this.CosmosDBQueryClient.Object, this.Logger, this.CosmosLinqQueryMock.Object));
            Assert.IsTrue(ex.ParamName.Equals("cosmosDBSetting", StringComparison.OrdinalIgnoreCase));
        }

        /// <summary>
        /// Ctors the null query client.
        /// </summary>
        [Test]
        public void Ctor_NullQueryClient()
        {
            this.SetupTestBase();
            var ex = Assert.Throws<ArgumentNullException>(() => new WebNotificationItemEntityRepository(this.CosmosDBSetting, null, this.Logger, this.CosmosLinqQueryMock.Object));
            Assert.IsTrue(ex.ParamName.Equals("cosmosDBQueryClient", StringComparison.OrdinalIgnoreCase));
        }

        /// <summary>
        /// Ctors the null linq query.
        /// </summary>
        [Test]
        public void Ctor_NullLinqQuery()
        {
            this.SetupTestBase();
            var ex = Assert.Throws<ArgumentNullException>(() => new WebNotificationItemEntityRepository(this.CosmosDBSetting, this.CosmosDBQueryClient.Object, this.Logger, null));
            Assert.IsTrue(ex.ParamName.Equals("cosmosLinqQuery", StringComparison.OrdinalIgnoreCase));
        }

        /// <summary>
        /// Ctors the valid input.
        /// </summary>
        [Test]
        public void Ctor_ValidInput()
        {
            this.SetupTestBase();
            var controller = new WebNotificationItemEntityRepository(this.CosmosDBSetting, this.CosmosDBQueryClient.Object, this.Logger, this.CosmosLinqQueryMock.Object);
            Assert.IsTrue(controller.GetType().FullName.Equals(typeof(WebNotificationItemEntityRepository).FullName, StringComparison.Ordinal));
        }
    }
}
